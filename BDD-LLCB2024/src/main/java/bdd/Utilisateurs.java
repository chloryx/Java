/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bdd;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andrea
 */
public class Utilisateurs extends javax.swing.JFrame {

    //VARIABLE
    RequeteSQL requeteSQL = new RequeteSQL();
    ConnexionBDD connecter = new ConnexionBDD();
    DefaultTableModel tableau;

    /**
     * Creates new form Utilisateurs
     */
    public Utilisateurs() {
        initComponents();
        Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnAccueil = new javax.swing.JButton();
        btnAjouter = new javax.swing.JButton();
        btnSupp = new javax.swing.JButton();
        btnActualiser = new javax.swing.JButton();
        Utilisateurs = new javax.swing.JLabel();
        labelUser = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        labelPassword = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JPasswordField();
        labelConfirmation = new javax.swing.JLabel();
        txtConfirmation = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        labelPrivilège = new javax.swing.JLabel();
        selectPrivilège = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Utilisateurs");
        setMaximumSize(new java.awt.Dimension(1197, 431));
        setMinimumSize(new java.awt.Dimension(640, 431));
        setPreferredSize(new java.awt.Dimension(640, 431));
        setSize(new java.awt.Dimension(640, 430));

        btnAccueil.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAccueil.setText("Accueil");
        btnAccueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccueilActionPerformed(evt);
            }
        });

        btnAjouter.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        btnSupp.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnSupp.setText("Supprimer");
        btnSupp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuppActionPerformed(evt);
            }
        });

        btnActualiser.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnActualiser.setText("Actualiser");
        btnActualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualiserActionPerformed(evt);
            }
        });

        Utilisateurs.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        Utilisateurs.setText("Utilisateurs");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSupp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAjouter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnActualiser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAccueil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Utilisateurs)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Utilisateurs)
                .addGap(48, 48, 48)
                .addComponent(btnAjouter)
                .addGap(18, 18, 18)
                .addComponent(btnSupp)
                .addGap(18, 18, 18)
                .addComponent(btnActualiser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAccueil)
                .addGap(58, 58, 58))
        );

        labelUser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelUser.setText("Username");

        txtUser.setBackground(new java.awt.Color(255, 255, 255));

        labelPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelPassword.setText("Mot de passe");

        txtPassword1.setBackground(new java.awt.Color(255, 255, 255));

        labelConfirmation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelConfirmation.setText("Confirmation ");

        txtConfirmation.setBackground(new java.awt.Color(255, 255, 255));

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tab);

        labelPrivilège.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelPrivilège.setText("Privilèges");

        selectPrivilège.setBackground(new java.awt.Color(255, 255, 255));
        selectPrivilège.setForeground(new java.awt.Color(0, 0, 0));
        selectPrivilège.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select (Maintenance)", "Select (TestFaille)", "Select, Insert, Update" }));
        selectPrivilège.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPrivilègeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelUser)
                            .addComponent(labelPassword)
                            .addComponent(txtPassword1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(txtUser))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelConfirmation)
                                .addComponent(txtConfirmation, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                .addComponent(selectPrivilège, 0, 0, Short.MAX_VALUE))
                            .addComponent(labelPrivilège)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUser)
                    .addComponent(labelPrivilège))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(selectPrivilège))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(labelConfirmation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAccueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccueilActionPerformed
        AccueilAdministrateur accueil = new AccueilAdministrateur();
        accueil.setVisible(true);
        accueil.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnAccueilActionPerformed

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        if (checkEmptyField()) {
            //On check si les cases ne sont pas vides
            JOptionPane.showMessageDialog(null, "Entrez l'username et le password du nouvel utilsateur", "Information manquante", JOptionPane.ERROR_MESSAGE);
        } else {
            //On regarde que le mdp renseignée est égale au mdr de confirmation
            if (txtConfirmation.getText().equals(txtPassword1.getText())) {
                //On se connecte
                Connection conn = connecter.connBdd();
                //Mise en place de la requête
                requeteSQL.AjouterUtilisateurs(txtUser.getText(), txtPassword1.getText(), conn);
                requeteSQL.grant(txtUser.getText(), selectPrivilège.getSelectedItem().toString(), conn);
                //Si la requete passe affiche ce msg
                JOptionPane.showMessageDialog(null, "Utilisateur ajouté!");
                //Deconnexion
                connecter.deconnBdd(conn);
                Table();
            }

        }
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void btnActualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualiserActionPerformed
        //Permet de remettre à vide les informations qui sont dans les field et de mettre à jour le tableau
        Table();
        txtConfirmation.setText("");
        txtUser.setText("");
        txtPassword1.setText("");
    }//GEN-LAST:event_btnActualiserActionPerformed

    private void tabMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMouseReleased
        int select = tab.getSelectedRow();
        tableau = (DefaultTableModel) tab.getModel();
        txtUser.setText(tableau.getValueAt(select, 0).toString());
    }//GEN-LAST:event_tabMouseReleased

    private void selectPrivilègeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPrivilègeActionPerformed

    }//GEN-LAST:event_selectPrivilègeActionPerformed

    private void btnSuppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuppActionPerformed
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/mysql", "root", "");
            requeteSQL.SupprimerUtilisateurs(txtUser.getText(), conn);
            JOptionPane.showMessageDialog(null, "Utilisateur a été supprimé", "Warning", HEIGHT);
            conn.close();
            Table();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }//GEN-LAST:event_btnSuppActionPerformed

    private boolean checkEmptyField() {
        //Si le field est vide renvoie true
        return (txtUser.getText().equals("") || txtPassword1.getText().equals("") || txtConfirmation.getText().equals(""));
    }

    //Mise en place d'un tableau référence tous les tuilsateur utilisant la bdd du ppe
    public void Table() {
        String[] User = {"Username", "Privilège"};
        String[] Monter = new String[2];

        tableau = new DefaultTableModel(null, User);

        try {
            System.out.println("Connexion à la base ..."); // Etape 1 : Connexion à la base
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/mysql", "root", "");
            System.out.println("Je suis connectée à mysql");
            ResultSet rs = requeteSQL.Tableau("SELECT DISTINCT User, Table_priv FROM `tables_priv` WHERE Db like 'bdd-llcb-2024'", conn);
            while (rs.next()) {
                Monter[0] = rs.getString("User");
                Monter[1] = rs.getString("Table_priv");
                tableau.addRow(Monter);
            }
            tab.setModel(tableau);
            conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Utilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Utilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Utilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Utilisateurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Utilisateurs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Utilisateurs;
    private javax.swing.JButton btnAccueil;
    private javax.swing.JButton btnActualiser;
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnSupp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelConfirmation;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelPrivilège;
    private javax.swing.JLabel labelUser;
    private javax.swing.JComboBox<String> selectPrivilège;
    private javax.swing.JTable tab;
    private javax.swing.JPasswordField txtConfirmation;
    private javax.swing.JPasswordField txtPassword1;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
